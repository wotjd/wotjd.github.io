<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 엉망진창 Swift 코딩</title>
    <link>https://wotjd.github.io/post/</link>
    <description>Recent content in Posts on 엉망진창 Swift 코딩</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Wed, 04 Sep 2019 18:15:43 +0900</lastBuildDate>
    
	<atom:link href="https://wotjd.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[iOS] URLSession 에서 dataTask 와 uploadTask 의 차이점</title>
      <link>https://wotjd.github.io/2019/09/ios-urlsession-%EC%97%90%EC%84%9C-datatask-%EC%99%80-uploadtask-%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90/</link>
      <pubDate>Wed, 04 Sep 2019 18:15:43 +0900</pubDate>
      
      <guid>https://wotjd.github.io/2019/09/ios-urlsession-%EC%97%90%EC%84%9C-datatask-%EC%99%80-uploadtask-%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90/</guid>
      <description>&lt;!--toc--&gt;

&lt;p&gt;Http 통신을 하기위해서 Alamofire 를 많이 쓴다.&lt;br /&gt;
책이든, 구글이든 Http 통신이라면&lt;br /&gt;
&lt;em&gt;&amp;ldquo;Alamofire 는 사용하기 간편하게 구현되어 있으니 Alamofire 쓰세요&amp;rdquo;&lt;/em&gt; 하는 글을 어렵지 않게 찾아볼 수 있다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[iOS] 문자열 치환 (특정 문자열 제거, Replace String in Swift)</title>
      <link>https://wotjd.github.io/2019/07/ios-%EB%AC%B8%EC%9E%90%EC%97%B4-%EC%B9%98%ED%99%98-%ED%8A%B9%EC%A0%95-%EB%AC%B8%EC%9E%90%EC%97%B4-%EC%A0%9C%EA%B1%B0-replace-string-in-swift/</link>
      <pubDate>Mon, 22 Jul 2019 12:09:16 +0900</pubDate>
      
      <guid>https://wotjd.github.io/2019/07/ios-%EB%AC%B8%EC%9E%90%EC%97%B4-%EC%B9%98%ED%99%98-%ED%8A%B9%EC%A0%95-%EB%AC%B8%EC%9E%90%EC%97%B4-%EC%A0%9C%EA%B1%B0-replace-string-in-swift/</guid>
      <description>앱을 개발하다보면 문자열에서 특정 문자열을 제거/변경하여 사용해야 하는 경우가 더러 있다.
여러가지 방법이 있겠지만 나는 replacingOccurrences 메소드를 사용하는 방법을 선호한다.
UUID 문자열에서 하이픈 (&amp;lsquo;-&amp;rsquo;) 제거하는 예제 
func replacingOccurrences(of target: String, with replacement: String, options: NSString.CompareOptions = [], range searchRange: NSRange) -&amp;gt; String 지정된 범위에서 target 문자열을 replacement 문자열로 바꿔 새로운 문자열을 반환함
(Returns a new string in which all occurrences of a target string in a specified range of the receiver are replaced by another given string)</description>
    </item>
    
    <item>
      <title>[iOS] 클로저, 고차 함수 관련 링크 정리</title>
      <link>https://wotjd.github.io/2019/06/ios-%ED%81%B4%EB%A1%9C%EC%A0%80-%EA%B3%A0%EC%B0%A8-%ED%95%A8%EC%88%98-%EA%B4%80%EB%A0%A8-%EB%A7%81%ED%81%AC-%EC%A0%95%EB%A6%AC/</link>
      <pubDate>Mon, 10 Jun 2019 16:51:09 +0900</pubDate>
      
      <guid>https://wotjd.github.io/2019/06/ios-%ED%81%B4%EB%A1%9C%EC%A0%80-%EA%B3%A0%EC%B0%A8-%ED%95%A8%EC%88%98-%EA%B4%80%EB%A0%A8-%EB%A7%81%ED%81%AC-%EC%A0%95%EB%A6%AC/</guid>
      <description>문법 - fuckingclousresyntax Clousure 정리 - 민소네 클로저 &amp;amp; 고차함수 - kanghoon 클로저 및 고차 함수 이해하기 - 조성규 Map, filter, reduce, drop in Swift. Simple Higher Order Functions. - Kirill Chukhlib 함수형 프로그래밍과 배열의 filter, reduce, map - outofbedlam Higher Order Function and its uses in Swift 4 Map 사용하기 - Tongchun  이미 충분히 좋은 자료가 많다.</description>
    </item>
    
    <item>
      <title>[Dev] Git 원리 알아보기</title>
      <link>https://wotjd.github.io/2019/06/dev-git-%EC%9B%90%EB%A6%AC-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0/</link>
      <pubDate>Fri, 07 Jun 2019 10:14:19 +0900</pubDate>
      
      <guid>https://wotjd.github.io/2019/06/dev-git-%EC%9B%90%EB%A6%AC-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0/</guid>
      <description>들어가기에 앞서 Git 은 이제 개발자로써 모르면 안될 중요한 기술이 되었다.
단순히 개인 프로젝트의 버전 관리를 넘어
다른 누군가와 협업을 할 때 Git 의 진가는 드러나며,
인터넷을 통해 원격으로 프로젝트를 관리하고 다른 사람의 프로젝트에 기여할 수 있게끔 해주는
Github 가 시작되면서부터는 오픈소스 산업 전반에 큰 영향을 끼치고 있다.
뭐가 어쨋든 이런 판이 짜여져 있는 상태에서
나는 남들이 써야한다 하면 쓰고, 필요할 때마다 모르는 걸 찾아보는 식으로 차츰 알아갔다.</description>
    </item>
    
    <item>
      <title>[Dev] Git 그냥 일단 시작해보기 (GitHub)</title>
      <link>https://wotjd.github.io/2019/06/dev-git-%EA%B7%B8%EB%83%A5-%EC%9D%BC%EB%8B%A8-%EC%8B%9C%EC%9E%91%ED%95%B4%EB%B3%B4%EA%B8%B0-github/</link>
      <pubDate>Wed, 05 Jun 2019 17:15:54 +0900</pubDate>
      
      <guid>https://wotjd.github.io/2019/06/dev-git-%EA%B7%B8%EB%83%A5-%EC%9D%BC%EB%8B%A8-%EC%8B%9C%EC%9E%91%ED%95%B4%EB%B3%B4%EA%B8%B0-github/</guid>
      <description>&lt;p&gt;본 글에서는 Mac 에서 Git 을 설치 및 사용하는 방법을 설명한다.&lt;br /&gt;
원격 저장소로는 Github 를 사용한다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Blogging] Hugo 로 github 블로그 시작하기 - 5. Travis CI 연동</title>
      <link>https://wotjd.github.io/2019/06/blogging-hugo-%EB%A1%9C-github-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-5.-travis-ci-%EC%97%B0%EB%8F%99/</link>
      <pubDate>Tue, 04 Jun 2019 16:34:47 +0900</pubDate>
      
      <guid>https://wotjd.github.io/2019/06/blogging-hugo-%EB%A1%9C-github-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-5.-travis-ci-%EC%97%B0%EB%8F%99/</guid>
      <description>Hosting Blog via Github Pages with Hugo on Mac, 맥에서 Hugo로 Github Pages에 블로그 호스팅하기
Git에 대한 충분한 지식이 있다는 전제하에 적은 문서이다. 
Travis CI 연동 Travis CI는 지속적 통합(Continuous Integration, CI)을 위한 빌드, 테스트 등을 자동화하는 툴이다.
여기서는 간단하게 컨텐츠 관리 repo 를 커밋했을 때 빌드 후 호스팅 될 repo 에 deploy 하도록 구성한다.
Travis CI 설정 Travis 에 로그인하여 Account Setting 의 Legacy Services Integration 에서</description>
    </item>
    
    <item>
      <title>[iOS] 앱 종료하기 (How to quit app in Swift)</title>
      <link>https://wotjd.github.io/2019/06/ios-%EC%95%B1-%EC%A2%85%EB%A3%8C%ED%95%98%EA%B8%B0-how-to-quit-app-in-swift/</link>
      <pubDate>Tue, 04 Jun 2019 15:23:03 +0900</pubDate>
      
      <guid>https://wotjd.github.io/2019/06/ios-%EC%95%B1-%EC%A2%85%EB%A3%8C%ED%95%98%EA%B8%B0-how-to-quit-app-in-swift/</guid>
      <description>iOS 앱을 코드 상에서 종료하고 싶을 때가 있을 것이다. (위대하신 클라이언트님의 요구사항으로 인해)
그러나 어디에도 공식적으로 제공하는 API 가 없다.
그럼 뭔가 불안한데.. 앱을 종료하지 말라는 건가..
결론부터 결국 아래와 같이 호출해서 홈으로 이동하게 끔 하였다. (Suspend)
 약간의 삽질 여기저기 찾아보니 Apple Document 의 이런 글을 찾았다.
How do I programmatically quit my iOS application?
굉장히 심플한 글이고, 요약하자면 아래와 같다.
 Q. 코드 상에서 앱 종료하고 싶어요!</description>
    </item>
    
    <item>
      <title>[Useful] iOS 개발 관련 애용하는 사이트 목록</title>
      <link>https://wotjd.github.io/2019/06/useful-ios-%EA%B0%9C%EB%B0%9C-%EA%B4%80%EB%A0%A8-%EC%95%A0%EC%9A%A9%ED%95%98%EB%8A%94-%EC%82%AC%EC%9D%B4%ED%8A%B8-%EB%AA%A9%EB%A1%9D/</link>
      <pubDate>Mon, 03 Jun 2019 18:55:13 +0900</pubDate>
      
      <guid>https://wotjd.github.io/2019/06/useful-ios-%EA%B0%9C%EB%B0%9C-%EA%B4%80%EB%A0%A8-%EC%95%A0%EC%9A%A9%ED%95%98%EB%8A%94-%EC%82%AC%EC%9D%B4%ED%8A%B8-%EB%AA%A9%EB%A1%9D/</guid>
      <description> 애 - 용
아래 항목은 계속 추가될 예정이다.
Apple  Swift 공식 사이트 Apple Developer Human Interface Guideline Appstore Connect  Blogs  zeddios님 블로그 지수네 블로그 마기님 블로그 민소네 블로그  Tutorial/Courses  iOSCreator raywenderlich Realm Academy Cocoacasts Hacking with Swift  Tips  Google Swift Style Guide  Utils  quicktype  Common  stack overflow GitHub Qiita Medium -  </description>
    </item>
    
    <item>
      <title>[Useful] Quicktype.io : Paste JSON as Code</title>
      <link>https://wotjd.github.io/2019/06/useful-quicktype.io-paste-json-as-code/</link>
      <pubDate>Mon, 03 Jun 2019 11:40:16 +0900</pubDate>
      
      <guid>https://wotjd.github.io/2019/06/useful-quicktype.io-paste-json-as-code/</guid>
      <description>https://quicktype.io
JSON 데이터를 입력하면 자동으로 코드를 생성해주는 사이트.
최근에는 네트워크 통신할 때 거의 JSON 을 사용한다.
JSON 데이터를 코드에서 다루기 위해서는 기본적으로 오고가는 데이터를 맵핑할 모델이 필요하다.
이 모델을 직접 만들때는 필드 이름의 철자가 한자라도 다르면 오류가 발생하는데,
파싱해야 할 필드가 많아질수록 타이핑해야 할 코드 수도 증가하여 손이 많이간다.
이럴 때 quicktype 을 사용하면 실수가 많이 줄어들 것 같다.
사용법  QuickType 사이트에 접속하여 우측 상단의 Generate Code 버튼을 눌러 이동한다.</description>
    </item>
    
    <item>
      <title>[Mac] Finder 에서 숨긴 파일 표시하기</title>
      <link>https://wotjd.github.io/2019/06/mac-finder-%EC%97%90%EC%84%9C-%EC%88%A8%EA%B8%B4-%ED%8C%8C%EC%9D%BC-%ED%91%9C%EC%8B%9C%ED%95%98%EA%B8%B0/</link>
      <pubDate>Sun, 02 Jun 2019 16:49:04 +0900</pubDate>
      
      <guid>https://wotjd.github.io/2019/06/mac-finder-%EC%97%90%EC%84%9C-%EC%88%A8%EA%B8%B4-%ED%8C%8C%EC%9D%BC-%ED%91%9C%EC%8B%9C%ED%95%98%EA%B8%B0/</guid>
      <description>Finder 에서는 시스템 파일이나 . 으로 시작하는 파일들을 기본적으로 숨겨놓는다.
가끔 그런 파일에 접근해야할 때가 있는데,
shift + command + . 키를 누르면 간단하게 표시/숨김 을 토글할 수 있다.</description>
    </item>
    
    <item>
      <title>[Blogging] Hugo 로 github 블로그 시작하기 - 4. Repository 관리 및 Github Pages 호스팅</title>
      <link>https://wotjd.github.io/2019/05/blogging-hugo-%EB%A1%9C-github-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-4.-repository-%EA%B4%80%EB%A6%AC-%EB%B0%8F-github-pages-%ED%98%B8%EC%8A%A4%ED%8C%85/</link>
      <pubDate>Fri, 31 May 2019 18:38:16 +0900</pubDate>
      
      <guid>https://wotjd.github.io/2019/05/blogging-hugo-%EB%A1%9C-github-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-4.-repository-%EA%B4%80%EB%A6%AC-%EB%B0%8F-github-pages-%ED%98%B8%EC%8A%A4%ED%8C%85/</guid>
      <description>Hosting Blog via Github Pages with Hugo on Mac, 맥에서 Hugo로 Github Pages에 블로그 호스팅하기
Git에 대한 충분한 지식이 있다는 전제하에 적은 문서이다. 
Repository 관리 및 Github Pages 호스팅 Repository 관리 (SubRepo 지정) 모든 리소스를 하나의 Repository로도 관리가 가능하겠지만
보통은 컨텐츠 Repository, 호스팅 될 Repository로 나눈다.
나는 후에 Hugo Build를 자동화하기에도 용이할 것이라고 판단하여 두 개의 저장소를 생성했다.
컨텐츠 Repository에는 Hugo 관련 파일 + 컨텐츠 파일들이 들어있고,
호스팅 될 Repository에는 hugo 빌드 결과물만 존재한다.</description>
    </item>
    
    <item>
      <title>[Blogging] Hugo 로 github 블로그 시작하기 - 3. 테마 선정 및 커스터마이징</title>
      <link>https://wotjd.github.io/2019/05/blogging-hugo-%EB%A1%9C-github-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-3.-%ED%85%8C%EB%A7%88-%EC%84%A0%EC%A0%95-%EB%B0%8F-%EC%BB%A4%EC%8A%A4%ED%84%B0%EB%A7%88%EC%9D%B4%EC%A7%95/</link>
      <pubDate>Fri, 31 May 2019 17:00:16 +0900</pubDate>
      
      <guid>https://wotjd.github.io/2019/05/blogging-hugo-%EB%A1%9C-github-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-3.-%ED%85%8C%EB%A7%88-%EC%84%A0%EC%A0%95-%EB%B0%8F-%EC%BB%A4%EC%8A%A4%ED%84%B0%EB%A7%88%EC%9D%B4%EC%A7%95/</guid>
      <description>Hosting Blog via Github Pages with Hugo on Mac, 맥에서 Hugo 로 Github Pages 에 블로그 호스팅하기
Hugo 는 포스팅 하는 당시의 최신버전을 사용한다. (v0.55.6/extended darwin/amd64)
Tranquilpeak 는 c7d2fde 커밋을 포크하여 커스터마이징 하였다. (0.4.4-BETA ~) 
들어가기에 앞서 가장 많은 삽질을 한 구간이다.
특히 오픈소스 테마에서 문서화 되지 않은 부분들에 대한 수정과
구글링을 해도 해법이 나오지 않는 특별한 에러는 날 미치게하였다.
결과적으로는 어느정도 불편하지 않을 정도로만 수정하도록 타협하여 적용했다.</description>
    </item>
    
    <item>
      <title>[Blogging] Hugo 로 github 블로그 시작하기 - 2. Hugo 시작하기</title>
      <link>https://wotjd.github.io/2019/05/blogging-hugo-%EB%A1%9C-github-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-2.-hugo-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/</link>
      <pubDate>Fri, 31 May 2019 16:48:16 +0900</pubDate>
      
      <guid>https://wotjd.github.io/2019/05/blogging-hugo-%EB%A1%9C-github-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-2.-hugo-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/</guid>
      <description>Hosting Blog via Github Pages with Hugo on Mac, 맥에서 Hugo 로 Github Pages 에 블로그 호스팅하기
Hugo 는 포스팅 하는 당시의 최신버전을 사용한다. (v0.55.6/extended darwin/amd64) 
Hugo 시작하기 왜 Hugo 인가요 Jekyll 빌드 환경 구성에 필요한 ruby 를 안써도 된다고 카더라. 제대로 쓴적도 없지만 ruby의 환경구성 난이도가 세계 라는건 알고있지. Jekyll 은 가볍게 포기
그리고 빠르대요. 삽질한 시간을 생각하면 또이ㄸㅗㅇ&amp;hellip;
Hugo 가 특히 사용하기 편하다라는 느낌은 못받았다.
환경 구성, 테마 선택하고 입히는 것도 사실 번거로웠지만</description>
    </item>
    
    <item>
      <title>[Blogging] Hugo 로 github 블로그 시작하기 - 1. 블로그 서비스/프레임워크 선택</title>
      <link>https://wotjd.github.io/2019/05/blogging-hugo-%EB%A1%9C-github-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-1.-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%84%9C%EB%B9%84%EC%8A%A4/%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC-%EC%84%A0%ED%83%9D/</link>
      <pubDate>Fri, 31 May 2019 16:38:16 +0900</pubDate>
      
      <guid>https://wotjd.github.io/2019/05/blogging-hugo-%EB%A1%9C-github-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-1.-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%84%9C%EB%B9%84%EC%8A%A4/%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC-%EC%84%A0%ED%83%9D/</guid>
      <description>Hosting Blog via Github Pages with Hugo on Mac, 맥에서 Hugo 로 Github Pages 에 블로그 호스팅하기 
개요 뻘글 때로는 예상치 못한 곳에서 다른 분야의 지식을 사용하는 경우가 있다.
이번 블로그를 구성하고 준비하면서 가장 많이 느낀게 &amp;lsquo;이거 전에 안해봤으면 어쩔뻔했나..&amp;rsquo; 일 정도로
뜬금없는 포인트에서 오류가 생겼고, 이전의 경험을 이용해 잠깐의 구글링만으로 상황을 모면한 경우가 많았다.
(뽀록을 보기좋게 풀어 설명한 것임)
삽질은 많이 했어도 잘 해결하여 이 블로그도 만들고 이 글을 적고 있으니,</description>
    </item>
    
    <item>
      <title>[Architecture] IoC 관련 끄적 (IoC, DI, DIP, IoC Container)</title>
      <link>https://wotjd.github.io/2019/05/architecture-ioc-%EA%B4%80%EB%A0%A8-%EB%81%84%EC%A0%81-ioc-di-dip-ioc-container/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wotjd.github.io/2019/05/architecture-ioc-%EA%B4%80%EB%A0%A8-%EB%81%84%EC%A0%81-ioc-di-dip-ioc-container/</guid>
      <description>&lt;p&gt;IoC 관련 스터디를 하던 도중에 최신 자료의 부재, 모호한 설명이 많고,&lt;br /&gt;
한 게시글에 이해하기 쉽게 만들어진 자료가 부족하다고 느껴져서&lt;br /&gt;
내가 찾아보고 이해한 내용을 되새기는 차원에서 정리했다.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>